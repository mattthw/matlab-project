function [xhouseh,xgivens] = solve_qr_b(A,b)
n = length(b); 
[Q,R,~] = qr_fact_househ(A);
xhouseh = zeros(n,1);
Qt = Q';
bt = b';
Qtb=zeros(n,1);
for i=1:n	
    for j=1:n
        Qtb(i)=Qtb(i) + Qt(i,j) * bt(j);
    end
end	
for k=1:n-1 
    for i=k+1:n
        xmult = R(i,k)/R(k,k);
        for j=k+1:n
            R(i,j) = R(i,j)-xmult*R(k,j);
        end
    Qtb(i) = Qtb(i)-xmult*Qtb(k);
    end
end
xhouseh(n) = Qtb(n)/R(n,n);
for i=n-1:-1:1
    sum = Qtb(i);
    for j=i+1:n
        sum = sum-R(i,j)*xhouseh(j);
    end
    xhouseh(i) = sum/R(i,i);
end

[Q,R,~] = qr_fact_givens(A);
xgivens = zeros(n,1);
Qt = Q';
bt = b';
Qtb=zeros(n,1);
for i=1:n	
    for j=1:n
        Qtb(i)=Qtb(i) + Qt(i,j) * bt(j);
    end
end	
for k=1:n-1 
    for i=k+1:n
        xmult = R(i,k)/R(k,k);
        for j=k+1:n
            R(i,j) = R(i,j)-xmult*R(k,j);
        end
    Qtb(i) = Qtb(i)-xmult*Qtb(k);
    end
end
xgivens(n) = Qtb(n)/R(n,n);
for i=n-1:-1:1
    sum = Qtb(i);
    for j=i+1:n
        sum = sum-R(i,j)*xgivens(j);
    end
    xgivens(i) = sum/R(i,i);
end
end

function [Q,R,error]=qr_fact_househ(A)

%A Cornell website was used to help make this function
%as http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf
n=length(A);
R=A; 
Q=eye(n); 
for k=1:n-1
    x=zeros(n,1);
    x(k:n,1)=R(k:n,k);
    g=norm(x);
    v=x; v(k)=x(k)+g;
    s=norm(v);
    if s~=0, w=v/s; u=2*R'*w;
    R=R-w*u'; 
    Q=Q-2*Q*(w*w'); 
    end
end
C=zeros(n);
for i=1:n	
	for j=1:n	
			C(i,j)=C(i,j) + Q(i,:) * R(:,j);   
	end	
end	
errorMatrix = C - A;
maxError = max(errorMatrix);
minError = min(errorMatrix);
error = max(abs(maxError),abs(minError));
end

function [Q,R,error] = qr_fact_givens(A)
  n = length(A);
  Q = eye(n);
  R = A;
  for j = 1:n
    for i = n:-1:(j+1)
      G = eye(n);
      [cos,sin] = getcosandsin( R(i-1,j),R(i,j));
      G([i-1, i],[i-1, i]) = [cos -sin; sin cos];
      R = G'*R;
      Q = Q*G;
    end
  end
C=zeros(n);
for i=1:n	
	for j=1:n	
			C(i,j)=C(i,j) + Q(i,:) * R(:,j);   
	end	
end	
errorMatrix = C - A;
maxError = max(errorMatrix);
minError = min(errorMatrix);
error = max(abs(maxError),abs(minError));
end

function [cos,sin] = getcosandsin(a,b)
  if b == 0
    cos = 1;
    sin = 0;
  else
    if abs(b) > abs(a)
      r = a / b;
      sin = 1 / sqrt(1 + r^2);
      cos = sin*r;
    else
      r = b / a;
      cos = 1 / sqrt(1 + r^2);
      sin = cos*r;
    end
  end
end
